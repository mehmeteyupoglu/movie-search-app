{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","movie-search-app/tests/acceptance/movie-search-app-test.js","movie-search-app/tests/integration/components/header-test.js","movie-search-app/tests/integration/components/movie-test.js","movie-search-app/tests/integration/components/movie/image-test.js","movie-search-app/tests/test-helper.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"movie-search-app/tests/acceptance/movie-search-app-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-qunit\"], function (_qunit, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Acceptance | movie search app', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _qunit.test)('visiting /', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.equal((0, _testHelpers.currentURL)(), '/');\n      assert.dom('nav').exists();\n      assert.dom('h1').hasText('Movie Search App');\n      assert.dom('h2').hasText('Welcome to Movie Search App!');\n      assert.dom('.jumbo a.button').hasText('Popular Movies');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.equal((0, _testHelpers.currentURL)(), '/popular-movies');\n    });\n    (0, _qunit.test)('visiting /popular-movies', async function (assert) {\n      await (0, _testHelpers.visit)('/popular-movies');\n      assert.equal((0, _testHelpers.currentURL)(), '/popular-movies');\n      assert.dom('nav').exists();\n      assert.dom('h1').hasText('Movie Search App');\n      assert.dom('h2').hasText('Popular Movies');\n      assert.dom('.jumbo a.button').hasText('Homepage');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.equal((0, _testHelpers.currentURL)(), '/');\n    });\n    (0, _qunit.test)('navigating using the nav-bar', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.dom('nav').exists();\n      assert.dom('nav a.menu-index').hasText('Movie Search App');\n      assert.dom('nav a.menu-about').hasText('Popular Movies');\n      await (0, _testHelpers.click)('nav a.menu-about');\n      assert.equal((0, _testHelpers.currentURL)(), '/popular-movies');\n      await (0, _testHelpers.click)('nav a.menu-index');\n      assert.equal((0, _testHelpers.currentURL)(), '/');\n    });\n  });\n});","define(\"movie-search-app/tests/integration/components/header-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | header', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the content inside a jumbo header with a tomster', async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Header>Hello World</Header>\n      */\n      {\n        id: \"f/IQ8VIO\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"header\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[2,\\\"Hello World\\\"]],\\\"parameters\\\":[]}]]]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        meta: {}\n      }));\n      assert.dom('.jumbo').exists();\n      assert.dom('.jumbo').hasText('Hello World');\n      assert.dom('.jumbo .tomster').exists();\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"movie-search-app/tests/integration/components/movie-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | movie', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders information about a rental property', async function (assert) {\n      assert.dom('article').hasClass('rental');\n      assert.dom('article h3').hasText('El Camino: A Breaking Bad Movie');\n      assert.dom('article .detail.owner').includesText('El Camino: A Breaking Bad Movie');\n      assert.dom('article .detail.type').includesText('36.21');\n      assert.dom('article .detail.location').includesText('2019-10-11');\n      assert.dom('article .detail.bedrooms').includesText('2550');\n      assert.dom('article .image').exists();\n    });\n  });\n});","define(\"movie-search-app/tests/integration/components/movie/image-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | movie/image', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the given image', async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n          <Rental::Image\n          src=\"/assets/images/tmbd.png\"\n          alt=\"TMDB\"\n          />\n          \n      */\n      {\n        id: \"0ZwZbOSR\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n    \\\"],[8,\\\"rental/image\\\",[[24,\\\"src\\\",\\\"/assets/images/tmbd.png\\\"],[24,\\\"alt\\\",\\\"TMDB\\\"]],[[],[]],null],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        meta: {}\n      }));\n      assert.dom('.image').exists();\n      assert.dom('.image img').hasAttribute('src', '/assets/images/tmbd.png');\n      assert.dom('.image img').hasAttribute('alt', 'TMDB');\n    });\n  });\n});","define(\"movie-search-app/tests/test-helper\", [\"movie-search-app/app\", \"movie-search-app/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define('movie-search-app/config/environment', [], function() {\n  var prefix = 'movie-search-app';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('movie-search-app/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}