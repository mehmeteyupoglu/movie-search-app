{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","movie-search-app/tests/acceptance/movie-search-app-test.js","movie-search-app/tests/integration/components/header-test.js","movie-search-app/tests/integration/components/movie-test.js","movie-search-app/tests/integration/components/movie/image-test.js","movie-search-app/tests/test-helper.js","movie-search-app/tests/unit/adapters/movie-test.js","movie-search-app/tests/unit/models/movie-test.js","movie-search-app/tests/unit/routes/movies-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define(\"movie-search-app/tests/acceptance/movie-search-app-test\", [\"qunit\", \"@ember/test-helpers\", \"ember-qunit\"], function (_qunit, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Acceptance | movie search app', function (hooks) {\n    (0, _emberQunit.setupApplicationTest)(hooks);\n    (0, _qunit.test)('visiting /', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.equal((0, _testHelpers.currentURL)(), '/');\n      assert.dom('nav').exists();\n      assert.dom('h1').hasText('Movie Search App');\n      assert.dom('h2').hasText('Welcome to Movie Search App!');\n      assert.dom('.jumbo a.button').hasText('Popular Movies');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.equal((0, _testHelpers.currentURL)(), '/popular-movies');\n    });\n    (0, _qunit.test)('visiting /popular-movies', async function (assert) {\n      await (0, _testHelpers.visit)('/popular-movies');\n      assert.equal((0, _testHelpers.currentURL)(), '/popular-movies');\n      assert.dom('nav').exists();\n      assert.dom('h1').hasText('Movie Search App');\n      assert.dom('h2').hasText('Popular Movies');\n      assert.dom('.jumbo a.button').hasText('Homepage');\n      await (0, _testHelpers.click)('.jumbo a.button');\n      assert.equal((0, _testHelpers.currentURL)(), '/');\n    });\n    (0, _qunit.test)('navigating using the nav-bar', async function (assert) {\n      await (0, _testHelpers.visit)('/');\n      assert.dom('nav').exists();\n      assert.dom('nav a.menu-index').hasText('Movie Search App');\n      assert.dom('nav a.menu-about').hasText('Popular Movies');\n      await (0, _testHelpers.click)('nav a.menu-about');\n      assert.equal((0, _testHelpers.currentURL)(), '/popular-movies');\n      await (0, _testHelpers.click)('nav a.menu-index');\n      assert.equal((0, _testHelpers.currentURL)(), '/');\n    });\n  });\n});","define(\"movie-search-app/tests/integration/components/header-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | header', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the content inside header with a TMBD', async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Header>{{yield}}</Header>\n      */\n      {\n        id: \"5aX8475i\",\n        block: \"{\\\"symbols\\\":[\\\"&default\\\"],\\\"statements\\\":[[8,\\\"header\\\",[],[[],[]],[[\\\"default\\\"],[{\\\"statements\\\":[[18,1,null]],\\\"parameters\\\":[]}]]]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        meta: {}\n      }));\n      assert.dom('.jumbo').exists();\n      assert.dom('.jumbo').hasText('');\n      assert.dom('.jumbo .tomster').exists();\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define(\"movie-search-app/tests/integration/components/movie-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | movie', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders information about a movie', async function (assert) {\n      this.setProperties({\n        movie: {\n          \"popularity\": 301.678,\n          \"vote_count\": 3713,\n          \"video\": false,\n          \"poster_path\": \"/xBHvZcjRiWyobQ9kxBhO6B2dtRI.jpg\",\n          \"id\": 419704,\n          \"adult\": false,\n          \"backdrop_path\": \"/5BwqwxMEjeFtdknRV792Svo0K1v.jpg\",\n          \"original_language\": \"en\",\n          \"original_title\": \"Ad Astra\",\n          \"genre_ids\": [18, 878],\n          \"title\": \"Ad Astra\",\n          \"vote_average\": 6,\n          \"overview\": \"The near future, a time when both hope and hardships drive humanity to look to the stars and beyond. While a mysterious phenomenon menaces to destroy life on planet Earth, astronaut Roy McBride undertakes a mission across the immensity of space and its many perils to uncover the truth about a lost expedition that decades before boldly faced emptiness and silence in search of the unknown.\",\n          \"release_date\": \"2019-09-17\"\n        }\n      });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        <Movie @movie={{this.movie}} />\n      */\n      {\n        id: \"FRVTAq2r\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[8,\\\"movie\\\",[],[[\\\"@movie\\\"],[[32,0,[\\\"movie\\\"]]]],null]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        meta: {}\n      }));\n      assert.dom('article').hasClass('rental');\n      assert.dom('article h3').hasText('Ad Astra');\n      assert.dom('article .detail.owner').includesText('Ad Astra');\n      assert.dom('article .detail.type').includesText('301.678');\n      assert.dom('article .detail.location').includesText('2019-09-17');\n      assert.dom('article .detail.bedrooms').includesText('3713');\n      assert.dom('article .image').exists();\n    });\n  });\n});","define(\"movie-search-app/tests/integration/components/movie/image-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | movie/image', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders the given image', async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n          <Rental::Image\n          src=\"/assets/images/tmbd.png\"\n          alt=\"TMDB\"\n          />\n          \n      */\n      {\n        id: \"0ZwZbOSR\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n    \\\"],[8,\\\"rental/image\\\",[[24,\\\"src\\\",\\\"/assets/images/tmbd.png\\\"],[24,\\\"alt\\\",\\\"TMDB\\\"]],[[],[]],null],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        meta: {}\n      }));\n      assert.dom('.image').exists();\n      assert.dom('.image img').hasAttribute('src', '/assets/images/tmbd.png');\n      assert.dom('.image img').hasAttribute('alt', 'TMDB');\n    });\n    (0, _qunit.test)('clicking on the component toggles its size', async function (assert) {\n      await (0, _testHelpers.render)(Ember.HTMLBars.template(\n      /*\n        \n            <Rental::Image\n              src=\"/assets/tmbd.png\"\n              alt=\"TMDB\"\n            />\n          \n      */\n      {\n        id: \"/1I4DI3O\",\n        block: \"{\\\"symbols\\\":[],\\\"statements\\\":[[2,\\\"\\\\n      \\\"],[8,\\\"rental/image\\\",[[24,\\\"src\\\",\\\"/assets/tmbd.png\\\"],[24,\\\"alt\\\",\\\"TMDB\\\"]],[[],[]],null],[2,\\\"\\\\n    \\\"]],\\\"hasEval\\\":false,\\\"upvars\\\":[]}\",\n        meta: {}\n      }));\n      assert.dom('button.image').exists();\n      assert.dom('.image').doesNotHaveClass('large');\n      assert.dom('.image small').hasText('View Larger');\n      await (0, _testHelpers.click)('button.image');\n      assert.dom('.image').hasClass('large');\n      assert.dom('.image small').hasText('View Smaller');\n      await (0, _testHelpers.click)('button.image');\n      assert.dom('.image').doesNotHaveClass('large');\n      assert.dom('.image small').hasText('View Larger');\n    });\n  });\n});","define(\"movie-search-app/tests/test-helper\", [\"movie-search-app/app\", \"movie-search-app/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"movie-search-app/tests/unit/adapters/movie-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Adapter | movie', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let adapter = this.owner.lookup('adapter:movie');\n      assert.ok(adapter);\n    });\n  });\n});","define(\"movie-search-app/tests/unit/models/movie-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | movie', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('movie', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"movie-search-app/tests/unit/routes/movies-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | movies', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:movies');\n      assert.ok(route);\n    });\n  });\n});","define('movie-search-app/config/environment', [], function() {\n  var prefix = 'movie-search-app';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(decodeURIComponent(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('movie-search-app/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjDA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}